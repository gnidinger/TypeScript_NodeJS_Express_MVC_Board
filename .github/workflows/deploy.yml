name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: ec2-github-actions
  CODE_DEPLOY_APPLICATION_NAME: CoGen_Rebuild_CodeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: CoGen_Rebuild_DG

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.12.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install and build
      run: |
        npm ci
        npm run build
        tar -cvf build.tar ./dist

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
        NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
        DB_URL: ${{ secrets.DB_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}

    - name: Upload to AWS S3
      run: |
        aws s3 cp ./dist s3://${{ env.S3_BUCKET_NAME }}/build.tar --recursive

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=tar,key=build.tar \
